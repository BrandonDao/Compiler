# Grammar Definition
# Use the special keyword "EMPTY" to indicate an EMPTY/epsilon rule
# Comments start with "#" and cannot go on the same line as a rule
# Terminals are prefixed with _. Here is a full list of supported terminals:
# _Int8
# _Int16
# _Int32
# _Int64
# _Bool
# _OpEquality
# _OpOr
# _OpAnd
# _OpNegate
# _OpAdd
# _OpMultiply
# _OpDivide
# _OpMod
# _OpAssign
# _LiteralInt
# _LiteralBool
# _Whitespace
# _Semicolon
# _Comma
# _OpenBrace
# _CloseBrace
# _OpenParen
# _CloseParen
# _OpenSquareBracket
# _CloseSquareBracket
# _OpenAngleBracket
# _CloseAngleBracket
# _Id

# Must exist in the file somewhere
ENTRYPOINT: Program;

PrimitiveType   : _Int8 | _Int16 | _Int32 | _Int32 | _Int64 | _Bool;

# Top-level structure
Program         : TopLevelList;
TopLevelList    : TopLevel TopLevelList
                | EMPTY
                ;
TopLevel        : VarDefStatement
                ;

# Types
Type            : PrimitiveType | _Id;

# Expressions
Expr            : BoolExpr
                | IntExpr
                ;
BoolExpr        : EqualityExpr OrAndRest;
EqualityExpr    : EqualityTerm EqualityExprRest;
EqualityExprRest: _OpEquality EqualityTerm EqualityExprRest | EMPTY;
EqualityTerm    : OrAnd | IntExpr;

OrAnd           : ValueTerm OrAndRest;
OrAndRest       : OrAndOp EqualityExpr | EMPTY;
OrAndOp         : _OpOr | _OpAnd;   

IntExpr         : MulDiv AddSubRest;
AddSubRest      : IntLowOp IntExpr | EMPTY;
MulDiv          : ValueTerm MulDivRest;
MulDivRest      : IntHighOp MulDiv | EMPTY;

IntLowOp        : _OpAdd | _OpNegate;
IntHighOp       : _OpMultiply | _OpDivide | _OpMod;

ValueTerm       : _Bang ValueTerm
                | _OpenParen Expr _CloseParen
                | _LiteralBool
                | _LiteralInt
                | _Id
                ;

# --- Variables ---
VarDefStatement     : Type _Id _OpAssign Expr _Semicolon ;
